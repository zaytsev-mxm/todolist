openapi: "3.0.0"
info:
  title: "maxzaytsev_todolist API"
  description: "maxzaytsev_todolist API"
  version: "1.0.0"
servers:
- url: "http://localhost:8080"
paths:
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Hello World!"
  /login:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginReceiveRemote"
        required: true
      responses:
        "404":
          description: "Not Found"
          content:
            'application/json':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User not found"
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/LoginResponseRemote"
        "400":
          description: "Bad Request"
          content:
            'application/json':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid password"
  /register:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterReceiveRemote"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            'application/json':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Email is not valid"
        "409":
          description: "Conflict"
          content:
            'application/json':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User already exists"
        "500":
          description: "Internal Server Error"
          content:
            'application/json':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User already exists"
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/RegisterResponseRemote"
components:
  schemas:
    LoginReceiveRemote:
      type: "object"
      properties:
        login:
          type: "string"
        password:
          type: "string"
      required:
      - "login"
      - "password"
    LoginResponseRemote:
      type: "object"
      properties:
        token:
          type: "string"
      required:
      - "token"
    RegisterReceiveRemote:
      type: "object"
      properties:
        login:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
      required:
      - "login"
      - "email"
      - "password"
    RegisterResponseRemote:
      type: "object"
      properties:
        token:
          type: "string"
      required:
      - "token"